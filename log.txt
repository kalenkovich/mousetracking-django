conda env create -f local-conda-environment.yml
conda activate mousetracking_conda
python -m venv myvenv
myvenv\Scripts\activate
pip install -r requirements.txt
django-admin.exe startproject negation .
# set time zone in settings.py
# set the folder for static files
# allow pythonanywhere as host
python manage.py migrate
python manage.py runserver

## The experiment app
python manage.py startapp experiment
# After creating `Participant` model:
python manage.py makemigrations experiment
python manage.py migrate experiment
# Make a test subject
python manage.py makemigrations --empty experiment
# Edit 002... migration
python manage.py migrate experiment

## Add admin
python manage.py createsuperuser

## Deploy
# On pythonanywhere.com
# 1. create API token
# Account -> API token -> Create a new API token
# 2. Open a console
# Consoles -> Start a New Console -> Other -> Bash
# 3. Install deployment helper
# pip3.6 install --user pythonanywhere
# 4. Deploy
# pa_autoconfigure_django.py --python=3.7https://github.com/kalenkovich/mousetracking-django.git
# 5. Create admin user
# python manage.py createsuperuser

## Show "Welcome!" at <url>/mt-neg/
# in negation/urls.py route mt-neg/ uris to whatever is inside experiment/urls.py

## Start building the experiment logic
# After clicking "Continue" on the welcome page, the router view will return the trial page
# Trial page and all the corresponding js and cs were developed independently and copied here
# Once done (committed, merged, and pushed to github), update the code on pythonanywere
# Run bash console again
cd kalenkovich.pythonanywhere.com
git pull

## Make experimental lists
# These will be rows in the Trial table bound to a participant
# After creating Trial, Image, and Audio models
python manage.py makemigrations experiment
python manage.py migrate
# Fill the tables with initial values using a data migration
python manage.py makemigrations --empty experiment
# Edit 004... migration
python manage.py migrate experiment

## Save trial results
# After creating TrialResults model:
python manage.py makemigrations experiment
python manage.py migrate experiment
